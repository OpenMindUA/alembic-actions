name: "Alembic Actions"
description: "Collection of GitHub Actions for managing Alembic database migrations in CI/CD workflows"

branding:
  icon: "database"
  color: "blue"

inputs:
  action:
    description: "Which action to run: 'review', 'test', or 'deploy'"
    required: true
  dialect:
    description: "SQL dialect to use for Alembic (postgresql, mysql, etc.)"
    required: false
    default: "postgresql"
  alembic_ini:
    description: "Path to alembic.ini file"
    required: false
    default: "alembic.ini"
  migration_path:
    description: "Path to Alembic migrations directory"
    required: false
    default: "migrations"
  revision_range:
    description: "Optional revision range for SQL generation (e.g., 'head:base')"
    required: false
    default: "head"
  pr_revisions_only:
    description: "Only generate SQL for migrations in the current PR (true/false)"
    required: false
    default: "true"
  database_url:
    description: "Database URL for testing/deploying migrations"
    required: false
  test_data_script:
    description: "Optional script to load test data (test action only)"
    required: false
  backup:
    description: "Whether to create a database backup before applying migrations (deploy action only)"
    required: false
    default: "true"
  target_revision:
    description: "Target revision to migrate to (deploy action only, default: head)"
    required: false
    default: "head"

runs:
  using: "composite"
  steps:
    - name: Validate action input
      shell: bash
      run: |
        if [[ "${{ inputs.action }}" != "review" && "${{ inputs.action }}" != "test" && "${{ inputs.action }}" != "deploy" ]]; then
          echo "Error: action must be one of: 'review', 'test', 'deploy'"
          echo "Received: '${{ inputs.action }}'"
          exit 1
        fi
        echo "Running Alembic ${{ inputs.action }} action"

    - name: Call Alembic Review
      if: inputs.action == 'review'
      uses: ./review
      with:
        dialect: ${{ inputs.dialect }}
        alembic_ini: ${{ inputs.alembic_ini }}
        migration_path: ${{ inputs.migration_path }}
        revision_range: ${{ inputs.revision_range }}
        pr_revisions_only: ${{ inputs.pr_revisions_only }}

    - name: Call Alembic Test
      if: inputs.action == 'test'
      uses: ./test
      with:
        dialect: ${{ inputs.dialect }}
        alembic_ini: ${{ inputs.alembic_ini }}
        migration_path: ${{ inputs.migration_path }}
        database_url: ${{ inputs.database_url }}
        test_data_script: ${{ inputs.test_data_script }}

    - name: Call Alembic Deploy
      if: inputs.action == 'deploy'
      uses: ./deploy
      with:
        dialect: ${{ inputs.dialect }}
        alembic_ini: ${{ inputs.alembic_ini }}
        migration_path: ${{ inputs.migration_path }}
        database_url: ${{ inputs.database_url }}
        backup: ${{ inputs.backup }}
        target_revision: ${{ inputs.target_revision }}