name: "Check Alembic Migrations and Generate SQL"
description: "Checks for Alembic migrations in a pull request, generates SQL for the specified dialect, and adds it as a PR comment"

# Note: This action requires the following permissions:
# - contents: read
# - pull-requests: write

inputs:
  dialect:
    description: "SQL dialect to use for Alembic (postgresql, mysql, etc.)"
    required: true
    default: "postgresql"
  alembic_ini:
    description: "Path to alembic.ini file"
    required: true
    default: "alembic.ini"
  migration_path:
    description: "Path to Alembic migrations directory"
    required: true
    default: "migrations"
  revision_range:
    description: "Optional revision range for SQL generation (e.g., 'head:base')"
    required: false
    default: "head"

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install uv
      shell: bash
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Create virtual environment and install dependencies
      shell: bash
      run: |
        uv venv
        uv pip install alembic sqlalchemy

    - name: Check for Alembic migrations
      id: check_migrations
      shell: bash
      run: |
        uv run python ${{ github.action_path }}/../../shared/scripts/generate_sql.py --check-migrations --migration-path ${{ inputs.migration_path }} --verbose

    - name: Generate SQL from Alembic migrations
      if: steps.check_migrations.outputs.has_migrations == 'true'
      id: generate_sql
      shell: bash
      run: |
        uv run python ${{ github.action_path }}/../../shared/scripts/generate_sql.py --generate-sql \
          --dialect ${{ inputs.dialect }} \
          --alembic-ini ${{ inputs.alembic_ini }} \
          --migration-path ${{ inputs.migration_path }} \
          --revision-range ${{ inputs.revision_range }} \
          --verbose

    - name: Add SQL to PR comment
      if: steps.check_migrations.outputs.has_migrations == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          // Read the generated SQL
          const sqlPath = path.join(process.env.GITHUB_WORKSPACE, 'generated.sql');
          const sql = fs.readFileSync(sqlPath, 'utf8');

          // Ensure SQL is not empty and handle safely
          if (!sql || sql.trim() === '') {
            console.log('No SQL changes generated, adding a note to the PR');
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "No SQL changes were generated for the Alembic migrations using dialect: " + process.env.DIALECT
            });
            return;
          }

          // Prepare the comment
          const commentBody = "## SQL Generated from Alembic Migrations\n\n" +
                              "**Dialect**: `" + (process.env.DIALECT || '${{ inputs.dialect }}') + "`\n\n" +
                              "```sql\n" +
                              sql + "\n" +
                              "```\n\n" +
                              "*This SQL was automatically generated by the [alembic-actions](https://github.com/OpenMindUA/alembic-actions) GitHub Action*";

          // Add comment to PR
          await github.rest.issues.createComment({
            issue_number: context.payload.pull_request.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });
      env:
        DIALECT: ${{ inputs.dialect }}
